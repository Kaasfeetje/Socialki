{"version":3,"sources":["history.js","components/Modal.js","components/Message.js","components/Loader.js","actions/types.js","actions/postActions.js","components/CustomSelect.js","components/CreateSocialki.js","components/Avatar.js","components/Header.js","components/SocialkiText.js","components/Socialki.js","components/InlineMessage.js","components/PostContainer.js","hooks/useIntersect.js","pages/HomePage.js","components/Form.js","actions/userActions.js","pages/LoginPage.js","pages/SignupPage.js","pages/ExplorePage.js","components/EditProfile.js","components/Notifications.js","actions/notificationActions.js","components/FollowButton.js","pages/ProfilePage.js","pages/SocialkiPage.js","components/Logout.js","components/AccountCard.js","pages/SearchPage.js","App.js","store.js","reducers/notificationReducers.js","reducers/postReducers.js","reducers/userReducers.js","index.js"],"names":["history","createBrowserHistory","Modal","opened","content","onDismiss","useState","show","setShow","ref","useRef","useEffect","ReactDOM","createPortal","onClick","className","e","stopPropagation","document","querySelector","Message","text","icon","type","timer","setTimeout","clearTimeout","Loader","size","color","current","style","setProperty","FETCH_FEED_REQUEST","FETCH_FEED_SUCCESS","FETCH_FEED_FAIL","FETCH_FEED_RESET","FETCH_EXPLORE_REQUEST","FETCH_EXPLORE_SUCCESS","FETCH_EXPLORE_FAIL","FETCH_EXPLORE_RESET","FETCH_PROFILE_REQUEST","FETCH_PROFILE_SUCCESS","FETCH_PROFILE_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAIL","USER_SIGNOUT_REQUEST","USER_SIGNOUT_SUCCESS","USER_SIGNOUT_FAIL","USER_FETCH_ME_REQUEST","USER_FETCH_ME_SUCCESS","USER_FETCH_ME_FAIL","USER_FETCH_POSTS_REQUEST","USER_FETCH_POSTS_SUCCESS","USER_FETCH_POSTS_FAIL","USER_FETCH_POSTS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","USER_PROFILE_UPDATE_RESET","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_CREATE_RESET","POST_FETCH_REQUEST","POST_FETCH_SUCCESS","POST_FETCH_FAIL","POST_LIKE_SUCCESS","POST_COMMENT_LIKE_SUCCESS","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_FAIL","SEARCH_RESET","POST_FETCH_COMMENT_REQUEST","POST_FETCH_COMMENT_SUCCESS","POST_FETCH_COMMENT_FAIL","POST_COMMENT_RESET","NOTIFICATION_FETCH_REQUEST","NOTIFICATION_FETCH_SUCCESS","NOTIFICATION_FETCH_FAIL","fetchFeedAction","lastPost","undefined","dispatch","a","axios","get","res","data","payload","response","errors","message","fetchExploreAction","userFetchPostsAction","user","console","log","config","headers","searchAction","keyword","first","hasPosts","post","CustomSelect","options","onChangeSelected","selected","setSelected","setOpened","renderOptions","map","option","i","value","changeHandler","handleClickOutside","contains","target","addEventListener","removeEventListener","CreateSocialki","onSuccess","description","setDescription","visibility","setVisibility","image","setImage","uploading","setUploading","uploadError","setUploadError","useDispatch","postCreate","useSelector","state","error","success","handleImageUpload","file","files","formData","FormData","append","onSubmit","preventDefault","createPostAction","id","onChange","rows","placeholder","htmlFor","accept","Avatar","width","height","fluid","src","alt","Header","hover","setHover","newPostOpened","setNewPostOpened","userInfo","closeCreatePost","to","onMouseEnter","onMouseLeave","profileImage","SocialkiText","mentionRegex","tagRegex","words","replace","split","mentions","filter","word","test","toLowerCase","tags","forEach","includes","href","rel","parseText","Socialki","socialki","comment","reblog","liked","setLiked","reblogged","setReblogged","copiedToClipboard","setCopiedToClipboard","commentId","postLikeCommentAction","postId","el","createElement","val","window","location","pathname","length","body","appendChild","select","execCommand","removeChild","push","username","startsWith","defaultProps","InlineMessage","PostContainer","fetchAction","loading","posts","reblogs","prevY","setPrevY","root","rootMargin","threshold","entry","updateEntry","node","setNode","observer","IntersectionObserver","currentObserver","disconnect","observe","useIntersect","boundingClientRect","y","err","HomePage","fetchFeed","userLoading","Form","fields","submitText","title","values","setValues","renderFields","field","tempValues","onChangeHandler","name","disabled","fetchProfileAction","LoginPage","loginError","loadingLogin","loginSuccess","username_email","password","SignupPage","signupError","loadingSignup","signupSuccess","email","passwordConfirm","password_confirm","ExplorePage","setKeyword","fetchExplore","search","margin","cursor","EditProfile","setUsername","setEmail","isPublic","setIsPublic","updateLoading","updateSuccess","updateError","put","updateProfileAction","checked","Notifications","notifications","fetchNotification","followHandler","notification","follow","accepted","follower","FollowButton","following","userId","isFollowing","setIsFollowing","followed","ProfilePage","match","fetchProfile","profileError","profile","fetchUserPosts","postsLoading","isLoggedInUser","setIsLoggedInUser","showEditProfile","setShowEditProfile","setNotification","params","closeUpdateProfile","followers","alert","SocialkiPage","fetchPost","comments","postFetchCommentAction","Logout","logoutSuccess","AccountCard","SearchPage","fetchSearch","users","hash","App","exact","path","component","reducer","combineReducers","action","postCopy","commentLoading","commentError","c","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","render","getElementById"],"mappings":"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","file":"static/js/main.26ec59db.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"../css/Modal.css\";\r\nfunction Modal({ opened, content, onDismiss }) {\r\n    const [show, setShow] = useState(opened || false);\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        setShow(opened);\r\n    }, [opened]);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            onClick={onDismiss}\r\n            className={`modal--container ${show && \"show\"}`}\r\n        >\r\n            <div\r\n                onClick={(e) => e.stopPropagation()}\r\n                ref={ref}\r\n                className={`modal `}\r\n            >\r\n                {content}\r\n            </div>\r\n        </div>,\r\n        document.querySelector(\"#modal\")\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Message({ text, icon, type }) {\r\n    const [show, setShow] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShow(false);\r\n        }, 3000);\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`message ${show && \"show\"} ${type && \"danger\"}`}>\r\n            <span>{text}</span>\r\n            {icon && <i className={icon} />}\r\n            <button type=\"button\" onClick={() => setShow(false)}>\r\n                X\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction Loader({ size, color }) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            if (size) ref.current.style.setProperty(\"--spinner-width\", size);\r\n            if (color) ref.current.style.setProperty(\"--spinner-color\", color);\r\n        }\r\n    }, [ref, size, color]);\r\n\r\n    return (\r\n        <div ref={ref} className=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","export const FETCH_FEED_REQUEST = \"FETCH_FEED_REQUEST\";\r\nexport const FETCH_FEED_SUCCESS = \"FETCH_FEED_SUCCESS\";\r\nexport const FETCH_FEED_FAIL = \"FETCH_FEED_FAIL\";\r\nexport const FETCH_FEED_RESET = \"FETCH_FEED_RESET\";\r\n\r\nexport const FETCH_EXPLORE_REQUEST = \"FETCH_EXPLORE_REQUEST\";\r\nexport const FETCH_EXPLORE_SUCCESS = \"FETCH_EXPLORE_SUCCESS\";\r\nexport const FETCH_EXPLORE_FAIL = \"FETCH_EXPLORE_FAIL\";\r\nexport const FETCH_EXPLORE_RESET = \"FETCH_EXPLORE_RESET\";\r\n\r\nexport const FETCH_PROFILE_REQUEST = \"FETCH_PROFILE_REQUEST\";\r\nexport const FETCH_PROFILE_SUCCESS = \"FETCH_PROFILE_SUCCESS\";\r\nexport const FETCH_PROFILE_FAIL = \"FETCH_PROFILE_FAIL\";\r\n\r\nexport const USER_SIGNIN_REQUEST = \"USER_SIGNIN_REQUEST\";\r\nexport const USER_SIGNIN_SUCCESS = \"USER_SIGNIN_SUCCESS\";\r\nexport const USER_SIGNIN_FAIL = \"USER_SIGNIN_FAIL\";\r\n\r\nexport const USER_SIGNUP_REQUEST = \"USER_SIGNUP_REQUEST\";\r\nexport const USER_SIGNUP_SUCCESS = \"USER_SIGNUP_SUCCESS\";\r\nexport const USER_SIGNUP_FAIL = \"USER_SIGNUP_FAIL\";\r\n\r\nexport const USER_SIGNOUT_REQUEST = \"USER_SIGNOUT_REQUEST\";\r\nexport const USER_SIGNOUT_SUCCESS = \"USER_SIGNOUT_SUCCESS\";\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const USER_FETCH_ME_REQUEST = \"USER_FETCH_ME_REQUEST\";\r\nexport const USER_FETCH_ME_SUCCESS = \"USER_FETCH_ME_SUCCESS\";\r\nexport const USER_FETCH_ME_FAIL = \"USER_FETCH_ME_FAIL\";\r\n\r\nexport const USER_FETCH_POSTS_REQUEST = \"USER_FETCH_POSTS_REQUEST\";\r\nexport const USER_FETCH_POSTS_SUCCESS = \"USER_FETCH_POSTS_SUCCESS\";\r\nexport const USER_FETCH_POSTS_FAIL = \"USER_FETCH_POSTS_FAIL\";\r\nexport const USER_FETCH_POSTS_RESET = \"USER_FETCH_POSTS_RESET\";\r\n\r\nexport const USER_PROFILE_UPDATE_REQUEST = \"USER_PROFILE_UPDATE_REQUEST\";\r\nexport const USER_PROFILE_UPDATE_SUCCESS = \"USER_PROFILE_UPDATE_SUCCESS\";\r\nexport const USER_PROFILE_UPDATE_FAIL = \"USER_PROFILE_UPDATE_FAIL\";\r\nexport const USER_PROFILE_UPDATE_RESET = \"USER_PROFILE_UPDATE_RESET\";\r\n\r\nexport const POST_CREATE_REQUEST = \"POST_CREATE_REQUEST\";\r\nexport const POST_CREATE_SUCCESS = \"POST_CREATE_SUCCESS\";\r\nexport const POST_CREATE_FAIL = \"POST_CREATE_FAIL\";\r\nexport const POST_CREATE_RESET = \"POST_CREATE_RESET\";\r\n\r\nexport const POST_FETCH_REQUEST = \"POST_FETCH_REQUEST\";\r\nexport const POST_FETCH_SUCCESS = \"POST_FETCH_SUCCESS\";\r\nexport const POST_FETCH_FAIL = \"POST_FETCH_FAIL\";\r\n\r\nexport const POST_LIKE_REQUEST = \"POST_LIKE_REQUEST\";\r\nexport const POST_LIKE_SUCCESS = \"POST_LIKE_SUCCESS\";\r\nexport const POST_LIKE_FAIL = \"POST_LIKE_FAIL\";\r\n\r\nexport const POST_REBLOG_REQUEST = \"POST_REBLOG_REQUEST\";\r\nexport const POST_REBLOG_SUCCESS = \"POST_REBLOG_SUCCESS\";\r\nexport const POST_REBLOG_FAIL = \"POST_REBLOG_FAIL\";\r\n\r\nexport const POST_COMMENT_REQUEST = \"POST_COMMENT_REQUEST\";\r\nexport const POST_COMMENT_SUCCESS = \"POST_COMMENT_SUCCESS\";\r\nexport const POST_COMMENT_FAIL = \"POST_COMMENT_FAIL\";\r\n\r\nexport const POST_COMMENT_LIKE_REQUEST = \"POST_COMMENT_LIKE_REQUEST\";\r\nexport const POST_COMMENT_LIKE_SUCCESS = \"POST_COMMENT_LIKE_SUCCESS\";\r\nexport const POST_COMMENT_LIKE_FAIL = \"POST_COMMENT_LIKE_FAIL\";\r\n\r\nexport const SEARCH_REQUEST = \"SEARCH_REQUEST\";\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\r\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\r\nexport const SEARCH_RESET = \"SEARCH_RESET\";\r\n\r\nexport const POST_FETCH_COMMENT_REQUEST = \"POST_FETCH_COMMENT_REQUEST\";\r\nexport const POST_FETCH_COMMENT_SUCCESS = \"POST_FETCH_COMMENT_SUCCESS\";\r\nexport const POST_FETCH_COMMENT_FAIL = \"POST_FETCH_COMMENT_FAIL\";\r\nexport const POST_COMMENT_RESET = \"POST_COMMENT_RESET\";\r\n\r\nexport const NOTIFICATION_FETCH_REQUEST = \"NOTIFICATION_FETCH_REQUEST\";\r\nexport const NOTIFICATION_FETCH_SUCCESS = \"NOTIFICATION_FETCH_SUCCESS\";\r\nexport const NOTIFICATION_FETCH_FAIL = \"NOTIFICATION_FETCH_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n    FETCH_FEED_FAIL,\r\n    FETCH_FEED_REQUEST,\r\n    FETCH_FEED_SUCCESS,\r\n    FETCH_EXPLORE_FAIL,\r\n    FETCH_EXPLORE_REQUEST,\r\n    FETCH_EXPLORE_SUCCESS,\r\n    POST_CREATE_REQUEST,\r\n    POST_CREATE_SUCCESS,\r\n    POST_CREATE_FAIL,\r\n    USER_FETCH_POSTS_REQUEST,\r\n    USER_FETCH_POSTS_SUCCESS,\r\n    USER_FETCH_POSTS_FAIL,\r\n    POST_FETCH_REQUEST,\r\n    POST_FETCH_SUCCESS,\r\n    POST_FETCH_FAIL,\r\n    POST_LIKE_REQUEST,\r\n    POST_LIKE_SUCCESS,\r\n    POST_LIKE_FAIL,\r\n    POST_REBLOG_REQUEST,\r\n    POST_REBLOG_SUCCESS,\r\n    POST_REBLOG_FAIL,\r\n    POST_COMMENT_REQUEST,\r\n    POST_COMMENT_SUCCESS,\r\n    POST_COMMENT_FAIL,\r\n    POST_FETCH_COMMENT_REQUEST,\r\n    POST_FETCH_COMMENT_SUCCESS,\r\n    POST_FETCH_COMMENT_FAIL,\r\n    POST_COMMENT_LIKE_REQUEST,\r\n    POST_COMMENT_LIKE_SUCCESS,\r\n    POST_COMMENT_LIKE_FAIL,\r\n    SEARCH_REQUEST,\r\n    SEARCH_SUCCESS,\r\n    SEARCH_FAIL,\r\n} from \"./types\";\r\n\r\nexport const fetchFeedAction = (lastPost = undefined) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: FETCH_FEED_REQUEST });\r\n        let data;\r\n\r\n        if (lastPost === undefined) {\r\n            const res = await axios.get(\"/api/v1/posts/feed\");\r\n            data = res.data;\r\n        } else {\r\n            const res = await axios.get(\r\n                `/api/v1/posts/feed?lastPost=${lastPost}`\r\n            );\r\n            data = res.data;\r\n        }\r\n\r\n        dispatch({\r\n            type: FETCH_FEED_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FETCH_FEED_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchExploreAction = (lastPost) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: FETCH_EXPLORE_REQUEST });\r\n\r\n        let data;\r\n        if (lastPost === undefined) {\r\n            const res = await axios.get(\"/api/v1/posts\");\r\n            data = res.data;\r\n        } else {\r\n            const res = await axios.get(`/api/v1/posts?lastPost=${lastPost}`);\r\n            data = res.data;\r\n        }\r\n\r\n        dispatch({\r\n            type: FETCH_EXPLORE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FETCH_EXPLORE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const createPostAction = (description, image, visibility) => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: POST_CREATE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/v1/posts\",\r\n            { description, image, visibility },\r\n            config\r\n        );\r\n        dispatch({\r\n            type: POST_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const userFetchPostsAction = (lastPost, user) => async (dispatch) => {\r\n    //used to filter out bad request\r\n    if (!user) return;\r\n    console.log(\"test\", user);\r\n    try {\r\n        dispatch({ type: USER_FETCH_POSTS_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        let data;\r\n        if (lastPost === undefined) {\r\n            const res = await axios.get(`/api/v1/posts/users/${user}`, config);\r\n            data = res.data;\r\n        } else {\r\n            const res = await axios.get(\r\n                `/api/v1/posts/users/${user}?lastPost=${lastPost}`,\r\n                config\r\n            );\r\n            data = res.data;\r\n        }\r\n\r\n        dispatch({ type: USER_FETCH_POSTS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_FETCH_POSTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchPostAction = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_FETCH_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/v1/posts/${id}`, config);\r\n\r\n        dispatch({ type: POST_FETCH_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_FETCH_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const postLikeAction = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_LIKE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/v1/like\",\r\n            { postId: id },\r\n            config\r\n        );\r\n        dispatch({ type: POST_LIKE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_LIKE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const postReblogAction = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_REBLOG_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/v1/reblog\",\r\n            { postId: id },\r\n            config\r\n        );\r\n        dispatch({ type: POST_REBLOG_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_REBLOG_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const postCommentAction = (id, comment) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_COMMENT_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/comments/${id}`,\r\n            comment,\r\n            config\r\n        );\r\n        dispatch({ type: POST_COMMENT_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_COMMENT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const postFetchCommentAction = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_FETCH_COMMENT_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/v1/comments/${id}`, config);\r\n\r\n        dispatch({ type: POST_FETCH_COMMENT_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_FETCH_COMMENT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const postLikeCommentAction = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_COMMENT_LIKE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/like/comment`,\r\n            { commentId: id },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: POST_COMMENT_LIKE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_COMMENT_LIKE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchAction = (keyword, lastPost, first, hasPosts) => async (\r\n    dispatch\r\n) => {\r\n    if (!hasPosts) return;\r\n    try {\r\n        dispatch({ type: SEARCH_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        let data;\r\n\r\n        if (lastPost === undefined) {\r\n            const res = await axios.post(\r\n                `/api/v1/search`,\r\n                { keyword, first },\r\n                config\r\n            );\r\n            data = res.data;\r\n        } else {\r\n            const res = await axios.post(\r\n                `/api/v1/search?lastPost=${lastPost}`,\r\n                { keyword, first },\r\n                config\r\n            );\r\n            data = res.data;\r\n        }\r\n\r\n        dispatch({\r\n            type: SEARCH_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SEARCH_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction CustomSelect({ options, onChangeSelected }) {\r\n    const [selected, setSelected] = useState(0);\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    const ref = useRef();\r\n\r\n    const changeHandler = (i) => {\r\n        onChangeSelected(options[i].value);\r\n        setSelected(i);\r\n        setOpened(false);\r\n    };\r\n\r\n    const renderOptions = options.map((option, i) => (\r\n        <div className=\"select--option\" onClick={(e) => changeHandler(i)}>\r\n            <i className={option.icon}></i>\r\n            <span>{option.text}</span>\r\n        </div>\r\n    ));\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e) => {\r\n            if (ref.current && !ref.current.contains(e.target)) {\r\n                e.stopPropagation();\r\n                setOpened(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n\r\n    return (\r\n        <div ref={ref} className={`select ${opened ? \"show\" : \"\"}`}>\r\n            <div\r\n                className=\"select--preview\"\r\n                onClick={(e) => setOpened(!opened)}\r\n            >\r\n                <i className={options[selected].icon}></i>\r\n                {/* <span>{options[selected].text}</span> */}\r\n            </div>\r\n            <div className={`select--options ${opened ? \"show\" : \"\"}`}>\r\n                {renderOptions}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomSelect;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Message from \"./Message\";\r\nimport Loader from \"./Loader\";\r\nimport { createPostAction } from \"../actions/postActions\";\r\nimport \"../css/CreateSocialki.css\";\r\nimport CustomSelect from \"./CustomSelect\";\r\n\r\nfunction CreateSocialki({ onSuccess }) {\r\n    const [description, setDescription] = useState(\"\");\r\n    const [visibility, setVisibility] = useState(\"public\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const [uploadError, setUploadError] = useState(undefined);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const postCreate = useSelector((state) => state.postCreate);\r\n    const { error, success } = postCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            onSuccess();\r\n        }\r\n    }, [success, onSuccess]);\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        setUploading(true);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                \"/api/v1/upload\",\r\n                formData,\r\n                config\r\n            );\r\n            setImage(data.data);\r\n            setUploading(false);\r\n        } catch (err) {\r\n            setUploadError(err.response.data.errors);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(createPostAction(description, image, visibility));\r\n\r\n        setDescription(\"\");\r\n        setImage(\"\");\r\n        setVisibility(\"public\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"create-socialki\" onSubmit={onSubmitHandler}>\r\n            {error &&\r\n                error.map((error) => (\r\n                    <Message\r\n                        key={error.message}\r\n                        type=\"danger\"\r\n                        text={error.message}\r\n                    />\r\n                ))}\r\n\r\n            {uploadError &&\r\n                uploadError.map((error) => (\r\n                    <Message\r\n                        text={error.message}\r\n                        key={error.message}\r\n                        type=\"danger\"\r\n                    />\r\n                ))}\r\n            <h2>Create Post</h2>\r\n\r\n            <div className=\"form-item\">\r\n                <i className=\"fas fa-comment\"></i>\r\n                <textarea\r\n                    id=\"description\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    value={description}\r\n                    rows={3}\r\n                    placeholder=\"Description\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"create-socialki--actions\">\r\n                <div className=\"group\">\r\n                    <div className=\"create-socialki--actions-image\">\r\n                        <label htmlFor=\"commentImage\">\r\n                            <i className=\"fas fa-image\"></i>\r\n                        </label>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            id=\"commentImage\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </div>\r\n                    <div className=\"create-socialki--actions-visibility\">\r\n                        {/* <label htmlFor=\"visibility\"></label> */}\r\n                        {/* <select\r\n                            id=\"visibility\"\r\n                            value={visibility}\r\n                            onChange={(e) => setVisibility(e.target.value)}\r\n                        >\r\n                            <option value=\"public\">Public</option>\r\n                            <option value=\"private\">Private</option>\r\n                            <option value=\"unlisted\">Unlisted</option>\r\n                        </select> */}\r\n\r\n                        <CustomSelect\r\n                            onChangeSelected={(value) => setVisibility(value)}\r\n                            options={[\r\n                                {\r\n                                    value: \"public\",\r\n                                    text: \"Public\",\r\n                                    icon: \"fas fa-eye\",\r\n                                },\r\n                                {\r\n                                    value: \"private\",\r\n                                    text: \"Private\",\r\n                                    icon: \"fas fa-eye-slash\",\r\n                                },\r\n                                {\r\n                                    value: \"unlisted\",\r\n                                    text: \"Unlisted\",\r\n                                    icon: \"fas fa-low-vision\",\r\n                                },\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\">\r\n                    Post\r\n                    {uploading && <Loader size=\"20px\" />}\r\n                </button>\r\n            </div>\r\n            {/* <button type=\"submit\">\r\n                Post{loading && <Loader size=\"20px\" color=\"white\" />}\r\n            </button> */}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CreateSocialki;\r\n","import React from \"react\";\r\n\r\nfunction Avatar({ image, width, height, fluid }) {\r\n    return (\r\n        <img\r\n            className={`avatar ${fluid && \"fluid\"}`}\r\n            src={`/${image}`}\r\n            alt=\"Profile avatar\"\r\n            width={width}\r\n            height={height}\r\n        ></img>\r\n    );\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/Header.css\";\r\nimport Modal from \"./Modal\";\r\nimport CreateSocialki from \"./CreateSocialki\";\r\nimport Avatar from \"./Avatar\";\r\nimport { POST_CREATE_RESET } from \"../actions/types\";\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [hover, setHover] = useState(null);\r\n    const [newPostOpened, setNewPostOpened] = useState(false);\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo } = user;\r\n\r\n    const closeCreatePost = () => {\r\n        setNewPostOpened(false);\r\n        dispatch({ type: POST_CREATE_RESET });\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Modal\r\n                opened={newPostOpened}\r\n                onDismiss={closeCreatePost}\r\n                content={<CreateSocialki onSuccess={closeCreatePost} />}\r\n            />\r\n\r\n            <div className=\"container\">\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <h2>Socialki</h2>\r\n                    </Link>\r\n                </div>\r\n                <nav>\r\n                    {userInfo ? (\r\n                        <ul>\r\n                            <li\r\n                                className=\"nav-item\"\r\n                                onMouseEnter={(e) => setHover(0)}\r\n                                onMouseLeave={(e) => setHover(null)}\r\n                            >\r\n                                <Link to=\"/\">\r\n                                    <i className=\"fas fa-home\"></i>\r\n                                    <div\r\n                                        className={`${\r\n                                            hover === 0 ? \"show\" : \"\"\r\n                                        }`}\r\n                                    >\r\n                                        Home\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li\r\n                                className=\"nav-item\"\r\n                                onMouseEnter={(e) => setHover(1)}\r\n                                onMouseLeave={(e) => setHover(null)}\r\n                            >\r\n                                <button onClick={(e) => setNewPostOpened(true)}>\r\n                                    <i className=\"fas fa-plus-circle\"></i>\r\n                                    <div\r\n                                        className={`${\r\n                                            hover === 1 ? \"show\" : \"\"\r\n                                        }`}\r\n                                    >\r\n                                        New Post\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n\r\n                            <li\r\n                                className=\"nav-item\"\r\n                                onMouseEnter={(e) => setHover(2)}\r\n                                onMouseLeave={(e) => setHover(null)}\r\n                            >\r\n                                <Link to=\"/explore\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                    <div\r\n                                        className={`${\r\n                                            hover === 2 ? \"show\" : \"\"\r\n                                        }`}\r\n                                    >\r\n                                        Explore\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li\r\n                                className=\"nav-item profileImage\"\r\n                                onMouseEnter={(e) => setHover(3)}\r\n                                onMouseLeave={(e) => setHover(null)}\r\n                            >\r\n                                <Link to=\"/profile\">\r\n                                    <Avatar\r\n                                        image={\r\n                                            // \"http://localhost:5000/uploads/default.jpg\"\r\n                                            userInfo.profileImage\r\n                                        }\r\n                                        width=\"50px\"\r\n                                        height=\"50px\"\r\n                                    />\r\n                                    <div\r\n                                        className={`${\r\n                                            hover === 3 ? \"show\" : \"\"\r\n                                        }`}\r\n                                    >\r\n                                        Profile\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    ) : (\r\n                        <ul>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"btn\">\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link\r\n                                    to=\"/signup\"\r\n                                    className=\"btn btn-secondary\"\r\n                                >\r\n                                    Signup\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SocialkiText({ text }) {\r\n    const [description, setDescription] = useState([]);\r\n    useEffect(() => {\r\n        const parseText = () => {\r\n            const mentionRegex = /^@\\w+$/;\r\n            const tagRegex = /^#\\w+$/;\r\n\r\n            const words = text.replace(/(\\r\\n|\\n|\\r)/gm, \" \").split(\" \");\r\n\r\n            const mentions = words.filter((word) =>\r\n                mentionRegex.test(word.toLowerCase())\r\n            );\r\n            const tags = words.filter((word) =>\r\n                tagRegex.test(word.toLowerCase())\r\n            );\r\n\r\n            words.forEach((word, i) => {\r\n                if (tags && tags.includes(word)) {\r\n                    //tags\r\n                    words[i] = (\r\n                        <Link key={i} to={`/search/${word}`}>\r\n                            {word + \" \"}\r\n                        </Link>\r\n                    );\r\n                } else if (mentions && mentions.includes(word)) {\r\n                    //mentions\r\n                    words[i] = (\r\n                        <Link key={i} to={`/profile/${word.replace(\"@\", \"\")}`}>\r\n                            {word}\r\n                        </Link>\r\n                    );\r\n                } else if (\r\n                    //LINKS\r\n                    //eslint-disable-next-line\r\n                    /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/.test(\r\n                        word\r\n                    )\r\n                ) {\r\n                    words[i] = (\r\n                        <a key={i} href={word} target=\"_blank\" rel=\"noreferrer\">\r\n                            {word + \" \"}\r\n                        </a>\r\n                    );\r\n                } else {\r\n                    words[i] = word + \" \";\r\n                }\r\n            });\r\n            setDescription(words);\r\n        };\r\n        parseText();\r\n    }, [text]);\r\n\r\n    return <>{description}</>;\r\n}\r\n\r\nexport default SocialkiText;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"./Avatar\";\r\nimport \"../css/Socialki.css\";\r\nimport { history } from \"../history\";\r\nimport {\r\n    postLikeAction,\r\n    postLikeCommentAction,\r\n    postReblogAction,\r\n} from \"../actions/postActions\";\r\nimport Message from \"./Message\";\r\nimport SocialkiText from \"./SocialkiText\";\r\n\r\nfunction Socialki({ socialki, comment, reblog }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [liked, setLiked] = useState(socialki.liked || false);\r\n    const [reblogged, setReblogged] = useState(socialki.reblogged || false);\r\n\r\n    const [copiedToClipboard, setCopiedToClipboard] = useState(false);\r\n\r\n    const likeHandler = () => {\r\n        setLiked(!liked);\r\n        if (!comment) dispatch(postLikeAction(socialki.id));\r\n        else dispatch(postLikeCommentAction(socialki.id));\r\n    };\r\n\r\n    const reblogHandler = () => {\r\n        setReblogged(!reblogged);\r\n        dispatch(postReblogAction(socialki.id));\r\n    };\r\n\r\n    const copyToClipBoard = () => {\r\n        const el = document.createElement(\"textarea\");\r\n        const val = window.location.pathname.split(\"/\");\r\n        const id = !comment ? socialki.id : val[val.length - 1];\r\n\r\n        el.value = `http://localhost:3000/post/${id}`;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand(\"copy\");\r\n        setCopiedToClipboard(true);\r\n        document.body.removeChild(el);\r\n    };\r\n\r\n    return (\r\n        <div className=\"socialki\">\r\n            {copiedToClipboard && <Message text=\"Copied link to clipboard\" />}\r\n            <div className=\"socialki--actions\">\r\n                <i\r\n                    onClick={likeHandler}\r\n                    className={`fa${liked ? \"s\" : \"r\"} fa-heart`}\r\n                ></i>\r\n                {!comment && <i className=\"far fa-comments\"></i>}\r\n                {!comment && (\r\n                    <i\r\n                        onClick={reblogHandler}\r\n                        className={`fas fa-retweet ${reblogged && \"reblogged\"}`}\r\n                    ></i>\r\n                )}\r\n\r\n                <i onClick={copyToClipBoard} className=\"fas fa-share\"></i>\r\n            </div>\r\n            <div\r\n                className={`socialki--main ${comment && \"no-pointer\"}`}\r\n                onClick={() => {\r\n                    if (!comment) {\r\n                        history.push(`/post/${socialki.id}`);\r\n                    }\r\n                }}\r\n            >\r\n                {reblog && (\r\n                    <div\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        className=\"socialki--reblog\"\r\n                    >\r\n                        @{reblog.username} has reblogged this post\r\n                    </div>\r\n                )}\r\n                <div className=\"socialki--body\">\r\n                    {socialki.image && (\r\n                        <img\r\n                            className=\"image\"\r\n                            src={\r\n                                socialki.image.startsWith(\"http\")\r\n                                    ? `${socialki.image}`\r\n                                    : `/${socialki.image}`\r\n                            }\r\n                            alt={socialki.description}\r\n                        />\r\n                    )}\r\n                    {socialki.description && (\r\n                        <span onClick={(e) => e.stopPropagation()}>\r\n                            <SocialkiText text={socialki.description} />\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    className=\"socialki--user\"\r\n                >\r\n                    <Link\r\n                        to={\r\n                            socialki.user\r\n                                ? `/profile/${socialki.user.username}`\r\n                                : `/profile`\r\n                        }\r\n                    >\r\n                        <span>\r\n                            @\r\n                            {socialki && socialki.user\r\n                                ? socialki.user.username\r\n                                : \"deleted-account\"}\r\n                        </span>\r\n                    </Link>\r\n                    <Link\r\n                        to={\r\n                            socialki.user\r\n                                ? `/profile/${socialki.user.username}`\r\n                                : `/profile`\r\n                        }\r\n                    >\r\n                        <Avatar\r\n                            image={\r\n                                socialki && socialki.user\r\n                                    ? socialki.user.profileImage\r\n                                    : \"\"\r\n                            }\r\n                            width=\"50px\"\r\n                            height=\"50px\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSocialki.defaultProps = {\r\n    socialki: {\r\n        id: \"1\",\r\n        description: \"Did not load correctly\",\r\n        image: \"\",\r\n        liked: false,\r\n        user: {\r\n            username: \"No idea\",\r\n            profileImage: \"uploads/default.jpg\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default Socialki;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction InlineMessage({ icon, text, type }) {\r\n    const [show, setShow] = useState(true);\r\n\r\n    return (\r\n        <div className={`inline-message ${show && \"show\"} ${type && \"danger\"}`}>\r\n            <span>{text}</span>\r\n            {icon && <i className={icon} />}\r\n            <button type=\"button\" onClick={() => setShow(false)}>\r\n                X\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InlineMessage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchFeedAction } from \"../actions/postActions\";\r\nimport { useIntersect } from \"../hooks/useIntersect\";\r\nimport Loader from \"./Loader\";\r\nimport Socialki from \"./Socialki\";\r\nimport InlineMessage from \"./InlineMessage\";\r\n\r\nfunction PostContainer({\r\n    fetchAction,\r\n    loading,\r\n    error,\r\n    posts,\r\n    lastPost,\r\n    user,\r\n    reblogs,\r\n}) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [prevY, setPrevY] = useState(null);\r\n    const [ref, entry] = useIntersect({ threshold: 0.3, rootMargin: \"0px\" });\r\n\r\n    useEffect(() => {\r\n        if (lastPost === undefined && !error && !loading) {\r\n            dispatch(fetchAction(undefined, user ? user : undefined));\r\n        }\r\n    }, [dispatch, fetchAction, lastPost, user, loading, error]);\r\n\r\n    useEffect(() => {\r\n        if (entry && entry.boundingClientRect) {\r\n            const y = entry.boundingClientRect.y;\r\n\r\n            if (prevY > y) {\r\n                //&& !error\r\n                if (!loading) {\r\n                    dispatch(fetchAction(lastPost, user ? user : undefined));\r\n                }\r\n            }\r\n            setPrevY(y);\r\n        }\r\n    }, [entry, prevY, dispatch, fetchAction, loading, lastPost, error, user]);\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n                {posts && (\r\n                    <>\r\n                        {posts.map((post, i) => (\r\n                            <Socialki\r\n                                key={i}\r\n                                socialki={post}\r\n                                reblog={reblogs && reblogs[i]}\r\n                            />\r\n                        ))}\r\n                        {error &&\r\n                            error.map((err) => (\r\n                                <InlineMessage\r\n                                    key={err.message}\r\n                                    type=\"danger\"\r\n                                    text={err.message}\r\n                                />\r\n                            ))}\r\n                        <div ref={ref}>\r\n                            <Loader size=\"5rem\" />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nPostContainer.defaultProps = {\r\n    fetchAction: fetchFeedAction,\r\n};\r\n\r\nexport default PostContainer;\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useIntersect = ({ root = null, rootMargin, threshold = 0 }) => {\r\n    const [entry, updateEntry] = useState({});\r\n    const [node, setNode] = useState(null);\r\n\r\n    const observer = useRef(\r\n        new window.IntersectionObserver(([entry]) => updateEntry(entry), {\r\n            root,\r\n            rootMargin,\r\n            threshold,\r\n        })\r\n    );\r\n\r\n    useEffect(() => {\r\n        const { current: currentObserver } = observer;\r\n        currentObserver.disconnect();\r\n\r\n        if (node) currentObserver.observe(node);\r\n        // console.log(\"changed\", node);\r\n        // if (node) console.log(\"keys\", typeof node);\r\n\r\n        return () => currentObserver.disconnect();\r\n    }, [node]);\r\n\r\n    return [setNode, entry];\r\n};\r\n\r\n//Credits to Justin Travis Waith-Mair blog: https://medium.com/the-non-traditional-developer post: https://medium.com/the-non-traditional-developer/how-to-use-an-intersectionobserver-in-a-react-hook-9fb061ac6cb5\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { fetchFeedAction } from \"../actions/postActions\";\r\nimport PostContainer from \"../components/PostContainer\";\r\nimport { FETCH_FEED_RESET } from \"../actions/types\";\r\nimport { history } from \"../history\";\r\n\r\nfunction HomePage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchFeed = useSelector((state) => state.fetchFeed);\r\n    const { loading, error, posts, lastPost, reblogs } = fetchFeed;\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo, loading: userLoading } = user;\r\n    useEffect(() => {\r\n        if (!userLoading && (userInfo === null || userInfo === {})) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [userInfo, userLoading]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch({ type: FETCH_FEED_RESET });\r\n        };\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"socialki-center\">\r\n            <Header />\r\n            <PostContainer\r\n                fetchAction={fetchFeedAction}\r\n                loading={loading}\r\n                error={error}\r\n                posts={posts}\r\n                lastPost={lastPost}\r\n                reblogs={reblogs}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"../css/Form.css\";\r\nimport Loader from \"./Loader\";\r\nfunction Form({ fields, submitText, onSubmit, title, loading }) {\r\n    const [values, setValues] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (values) return;\r\n        const state = {};\r\n        for (let i = 0; i < fields.length; i++) {\r\n            state[fields[i].id] = \"\";\r\n        }\r\n        setValues(state);\r\n    }, [fields, values]);\r\n\r\n    const onChangeHandler = (e, field) => {\r\n        const tempValues = values;\r\n        tempValues[field.id] = e.target.value;\r\n\r\n        setValues(tempValues);\r\n    };\r\n\r\n    const renderFields = fields.map((field) => (\r\n        <div className=\"form-item\" key={field.id}>\r\n            <i className={field.icon}></i>\r\n            <input\r\n                onChange={(e) => onChangeHandler(e, field)}\r\n                id={field.id}\r\n                type={field.type}\r\n                placeholder={field.name}\r\n            ></input>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <form onSubmit={(e) => onSubmit(e, values)} className=\"form--container\">\r\n            <h2>{title}</h2>\r\n            {renderFields}\r\n            <button type=\"submit\" disabled={loading}>\r\n                {submitText}\r\n            </button>\r\n            {loading && <Loader size=\"25px\" />}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import axios from \"axios\";\r\nimport {\r\n    USER_FETCH_ME_FAIL,\r\n    USER_FETCH_ME_REQUEST,\r\n    USER_FETCH_ME_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNUP_REQUEST,\r\n    USER_SIGNUP_SUCCESS,\r\n    USER_SIGNUP_FAIL,\r\n    FETCH_PROFILE_REQUEST,\r\n    FETCH_PROFILE_SUCCESS,\r\n    FETCH_PROFILE_FAIL,\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_SIGNOUT_REQUEST,\r\n    USER_SIGNOUT_SUCCESS,\r\n    USER_SIGNOUT_FAIL,\r\n} from \"./types\";\r\n\r\nexport const signin = (username_email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_SIGNIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/v1/auth/signin\",\r\n            {\r\n                username_email,\r\n                password,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (email, username, password, passwordConfirm) => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: USER_SIGNUP_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/v1/auth/signup\",\r\n            {\r\n                username,\r\n                email,\r\n                password,\r\n                passwordConfirm,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_SIGNUP_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNUP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const signout = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_SIGNOUT_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        await axios.post(\"/api/v1/auth/signout\", {}, config);\r\n\r\n        dispatch({ type: USER_SIGNOUT_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNOUT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const getMe = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_FETCH_ME_REQUEST });\r\n\r\n        const { data } = await axios.get(\"/api/v1/auth/me\");\r\n\r\n        dispatch({ type: USER_FETCH_ME_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_FETCH_ME_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchProfileAction = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: FETCH_PROFILE_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/users/${id}/profile`);\r\n\r\n        dispatch({\r\n            type: FETCH_PROFILE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FETCH_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProfileAction = (\r\n    username,\r\n    email,\r\n    profileImage,\r\n    description,\r\n    isPublic\r\n) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_PROFILE_UPDATE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            \"/api/v1/auth/update-me\",\r\n            { username, email, profileImage, description, isPublic },\r\n            config\r\n        );\r\n        dispatch({ type: USER_PROFILE_UPDATE_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Form from \"../components/Form\";\r\nimport Header from \"../components/Header\";\r\nimport { signin } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\n\r\nfunction LoginPage({ history }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { loginError, loadingLogin, loginSuccess } = user;\r\n\r\n    const loginHandler = (e, values) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(signin(values.username_email, values.password));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (loginSuccess) {\r\n            history.push(\"/profile\");\r\n        }\r\n    }, [history, loginSuccess]);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {loginError &&\r\n                loginError.map((error) => (\r\n                    <Message text={error.message} type=\"danger\" />\r\n                ))}\r\n            <div className=\"container\">\r\n                <Form\r\n                    fields={[\r\n                        {\r\n                            name: \"Username or Email\",\r\n                            id: \"username_email\",\r\n                            type: \"text\",\r\n                            icon: \"fas fa-user-circle\",\r\n                        },\r\n                        {\r\n                            name: \"Password\",\r\n                            id: \"password\",\r\n                            type: \"password\",\r\n                            icon: \"fas fa-key\",\r\n                        },\r\n                    ]}\r\n                    loading={loadingLogin}\r\n                    submitText=\"Login\"\r\n                    onSubmit={loginHandler}\r\n                    title=\"Login\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup } from \"../actions/userActions\";\r\n\r\nimport Form from \"../components/Form\";\r\nimport Header from \"../components/Header\";\r\nimport Message from \"../components/Message\";\r\n\r\nfunction SignupPage({ history }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { signupError, loadingSignup, signupSuccess } = user;\r\n\r\n    useEffect(() => {\r\n        if (signupSuccess) {\r\n            history.push(\"/profile\");\r\n        }\r\n    }, [history, signupSuccess]);\r\n\r\n    const signupHandler = (e, values) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(\r\n            signup(\r\n                values.email,\r\n                values.username,\r\n                values.password,\r\n                values.password_confirm\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {signupError &&\r\n                signupError.map((error) => (\r\n                    <Message text={error.message} type=\"danger\" />\r\n                ))}\r\n            <div className=\"container\">\r\n                <Form\r\n                    fields={[\r\n                        {\r\n                            name: \"Email\",\r\n                            id: \"email\",\r\n                            type: \"text\",\r\n                            icon: \"fas fa-envelope\",\r\n                        },\r\n                        {\r\n                            name: \"Username\",\r\n                            id: \"username\",\r\n                            type: \"text\",\r\n                            icon: \"fas fa-user-circle\",\r\n                        },\r\n                        {\r\n                            name: \"Password\",\r\n                            id: \"password\",\r\n                            type: \"password\",\r\n                            icon: \"fas fa-key\",\r\n                        },\r\n                        {\r\n                            name: \"Confirm Password\",\r\n                            id: \"password_confirm\",\r\n                            type: \"password\",\r\n                            icon: \"fas fa-key\",\r\n                        },\r\n                    ]}\r\n                    loading={loadingSignup}\r\n                    submitText=\"Create Account\"\r\n                    onSubmit={signupHandler}\r\n                    title=\"Create Account\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { fetchExploreAction } from \"../actions/postActions\";\r\nimport PostContainer from \"../components/PostContainer\";\r\nimport { FETCH_EXPLORE_RESET } from \"../actions/types\";\r\nimport { history } from \"../history\";\r\n\r\nfunction ExplorePage() {\r\n    const dispatch = useDispatch();\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const fetchExplore = useSelector((state) => state.fetchExplore);\r\n    const { loading, error, posts, lastPost } = fetchExplore;\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo, loading: userLoading } = user;\r\n\r\n    useEffect(() => {\r\n        if (!userLoading && (userInfo === null || userInfo === {})) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [userInfo, userLoading]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch({ type: FETCH_EXPLORE_RESET });\r\n        };\r\n    }, [dispatch]);\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/search/${keyword}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <section className=\"container socialki-center\">\r\n                <form\r\n                    onSubmit={search}\r\n                    style={{\r\n                        width: \"60%\",\r\n                        margin: \"0 auto\",\r\n                    }}\r\n                >\r\n                    <div className=\"form-item\" key=\"keyword\">\r\n                        <i\r\n                            className=\"fas fa-search\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={search}\r\n                        ></i>\r\n\r\n                        <input\r\n                            onChange={(e) => setKeyword(e.target.value)}\r\n                            id=\"keyword\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search...\"\r\n                        ></input>\r\n                    </div>\r\n                </form>\r\n                <PostContainer\r\n                    fetchAction={fetchExploreAction}\r\n                    loading={loading}\r\n                    error={error}\r\n                    posts={posts}\r\n                    lastPost={lastPost}\r\n                />\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExplorePage;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Message from \"./Message\";\r\nimport { updateProfileAction } from \"../actions/userActions\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction EditProfile({ onSuccess }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [isPublic, setIsPublic] = useState(true);\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const [uploadError, setUploadError] = useState(undefined);\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { updateLoading, updateSuccess, updateError, userInfo } = user;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) return;\r\n\r\n        setUsername(userInfo.username || \"\");\r\n        setEmail(userInfo.email || \"\");\r\n        setDescription(userInfo.description || \"\");\r\n        setImage(userInfo.profileImage || \"\");\r\n        setIsPublic(userInfo.isPublic !== undefined ? userInfo.isPublic : true);\r\n    }, [userInfo]);\r\n\r\n    useEffect(() => {\r\n        if (updateSuccess) {\r\n            onSuccess();\r\n        }\r\n    }, [updateSuccess, onSuccess]);\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"profileImage\", file);\r\n\r\n        setUploading(true);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                \"/api/v1/upload/profileImage\",\r\n                formData,\r\n                config\r\n            );\r\n            setImage(data.data);\r\n            setUploading(false);\r\n        } catch (err) {\r\n            setUploadError(err.response.data.errors);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProfileAction(username, email, image, description, isPublic)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <form className=\"form--container w-full\" onSubmit={onSubmitHandler}>\r\n            {uploadError &&\r\n                uploadError.map((error) => (\r\n                    <Message\r\n                        key={error.message}\r\n                        text={error.message}\r\n                        type=\"danger\"\r\n                    />\r\n                ))}\r\n            {updateError &&\r\n                updateError.map((error) => (\r\n                    <Message\r\n                        key={error.message}\r\n                        text={error.message}\r\n                        type=\"danger\"\r\n                    />\r\n                ))}\r\n\r\n            <h2>Update Profile</h2>\r\n            <div className=\"form-item\">\r\n                <i className=\"fas fa-user-circle\"></i>\r\n                <input\r\n                    id=\"username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                />\r\n            </div>\r\n            <div className=\"form-item\">\r\n                <i className=\"fas fa-envelope\"></i>\r\n                <input\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                />\r\n            </div>\r\n            <div className=\"form-item\">\r\n                <i className=\"fas fa-image\"></i>\r\n                <input\r\n                    id=\"image\"\r\n                    onChange={handleImageUpload}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                />\r\n                {uploading && <Loader size=\"1rem\" color=\"black\" />}\r\n            </div>\r\n            <div className=\"form-item\">\r\n                <i className=\"fas fa-comment\"></i>\r\n                <textarea\r\n                    id=\"description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    rows={3}\r\n                    placeholder=\"Description\"\r\n                />\r\n            </div>\r\n            <div className=\"form-item checkbox\">\r\n                <i className=\"fas fa-check\">Account Public</i>\r\n                <input\r\n                    onChange={(e) => setIsPublic(e.target.checked)}\r\n                    checked={isPublic}\r\n                    type=\"checkbox\"\r\n                ></input>\r\n            </div>\r\n            <button type=\"submit\">\r\n                Save Changes\r\n                {updateLoading && <Loader size=\"1rem\" color=\"white\" />}\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditProfile;\r\n","import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport \"../css/Notifications.css\";\r\nimport { notificationFetchAction } from \"../actions/notificationActions\";\r\nfunction Notifications() {\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchNotification = useSelector((state) => state.fetchNotification);\r\n    const { notifications } = fetchNotification;\r\n\r\n    useEffect(() => {\r\n        dispatch(notificationFetchAction());\r\n    }, [dispatch]);\r\n\r\n    const followHandler = async (id, accept) => {\r\n        console.log(id);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            };\r\n            await axios.post(\r\n                `/api/v1/follow/${id}/${accept ? \"accept\" : \"reject\"}`,\r\n                {},\r\n                config\r\n            );\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <h2>Notifications</h2>\r\n            <div className=\"notifications--panel\">\r\n                {notifications.length === 0 && <span>No notifications</span>}\r\n                {notifications.map((notification, i) => {\r\n                    switch (notification.type) {\r\n                        case \"LIKE_POST\":\r\n                            return (\r\n                                <div key={i} className=\"like-post-notification\">\r\n                                    <div className=\"like-post-notification--post\">\r\n                                        <img\r\n                                            src={notification.post.image}\r\n                                            alt={`${notification.user.username} post`}\r\n                                        />\r\n                                        <div>\r\n                                            {notification.post.description}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        has been liked by @\r\n                                        {notification.user.username}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        case \"FOLLOW_NOTIFICATION\":\r\n                            if (notification.follow.accepted) {\r\n                                return (\r\n                                    <div\r\n                                        key={i}\r\n                                        className=\"follow-notification\"\r\n                                    >\r\n                                        <div>\r\n                                            <span>\r\n                                                @\r\n                                                {notification.follow.follower &&\r\n                                                    notification.follow.follower\r\n                                                        .username}\r\n                                            </span>\r\n                                            is now following you.\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            return (\r\n                                <div key={i} className=\"follow-notification\">\r\n                                    <div>\r\n                                        <span>\r\n                                            @\r\n                                            {notification.follow.follower\r\n                                                .username + \" \"}\r\n                                        </span>\r\n                                        wants to follow you\r\n                                    </div>\r\n                                    <div>\r\n                                        <i\r\n                                            onClick={() =>\r\n                                                followHandler(\r\n                                                    notification.follow.id,\r\n                                                    true\r\n                                                )\r\n                                            }\r\n                                            className=\"fas fa-check-circle\"\r\n                                        ></i>\r\n                                        <i\r\n                                            onClick={() =>\r\n                                                followHandler(\r\n                                                    notification.follow.id,\r\n                                                    false\r\n                                                )\r\n                                            }\r\n                                            className=\"fas fa-times-circle danger\"\r\n                                        ></i>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        default:\r\n                            return <div>t</div>;\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;\r\n","import axios from \"axios\";\r\nimport {\r\n    NOTIFICATION_FETCH_FAIL,\r\n    NOTIFICATION_FETCH_REQUEST,\r\n    NOTIFICATION_FETCH_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const notificationFetchAction = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NOTIFICATION_FETCH_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(\"/api/v1/notifications\", config);\r\n\r\n        dispatch({ type: NOTIFICATION_FETCH_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NOTIFICATION_FETCH_FAIL,\r\n            payload:\r\n                error.response && error.response.data.errors\r\n                    ? error.response.data.errors\r\n                    : [{ message: error.message }],\r\n        });\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction FollowButton({ className, following, userId }) {\r\n    const [isFollowing, setIsFollowing] = useState(following || undefined);\r\n    const followHandler = async () => {\r\n        if (isFollowing) setIsFollowing(false);\r\n        if (!isFollowing) setIsFollowing(\"pending\");\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/follow\",\r\n                { followed: userId },\r\n                config\r\n            );\r\n\r\n            if (data.data && data.data.accepted === true) {\r\n                setIsFollowing(true);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={className} onClick={followHandler}>\r\n            {isFollowing === \"pending\" ? (\r\n                <>\r\n                    <i className=\"fas fa-user-clock\"></i>\r\n                    <span>Pending</span>\r\n                </>\r\n            ) : isFollowing ? (\r\n                <>\r\n                    <i className=\"fas fa-user-minus\"></i>\r\n                    <span>Unfollow</span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <i className=\"fas fa-user-plus\"></i>\r\n                    <span>Follow</span>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FollowButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport PostContainer from \"../components/PostContainer\";\r\nimport Avatar from \"../components/Avatar\";\r\nimport Header from \"../components/Header\";\r\nimport { fetchProfileAction } from \"../actions/userActions\";\r\nimport { userFetchPostsAction } from \"../actions/postActions\";\r\nimport \"../css/Profile.css\";\r\nimport Modal from \"../components/Modal\";\r\nimport EditProfile from \"../components/EditProfile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Notifications from \"../components/Notifications\";\r\nimport {\r\n    USER_FETCH_POSTS_RESET,\r\n    USER_PROFILE_UPDATE_RESET,\r\n} from \"../actions/types\";\r\nimport Message from \"../components/Message\";\r\nimport { history } from \"../history\";\r\nimport FollowButton from \"../components/FollowButton\";\r\n\r\nfunction ProfilePage({ match }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo, loading: userLoading } = user;\r\n\r\n    const fetchProfile = useSelector((state) => state.fetchProfile);\r\n    const { error: profileError, loading, profile } = fetchProfile;\r\n\r\n    const fetchUserPosts = useSelector((state) => state.fetchUserPosts);\r\n    const { error, loading: postsLoading, posts, lastPost } = fetchUserPosts;\r\n\r\n    const [isLoggedInUser, setIsLoggedInUser] = useState(false);\r\n    const [showEditProfile, setShowEditProfile] = useState(false);\r\n    const [notification, setNotification] = useState(false);\r\n    const [isFollowing, setIsFollowing] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        if (!userLoading && (userInfo === null || userInfo === {})) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [userInfo, userLoading]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch({ type: USER_FETCH_POSTS_RESET });\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (loading || profileError) return;\r\n        console.log(postsLoading);\r\n        //fetch the profile\r\n        if (match.params.user) {\r\n            if (\r\n                profile &&\r\n                (profile.username === match.params.user ||\r\n                    profile.id === match.params.user)\r\n            ) {\r\n                //currently stored profile does not equal requested profile\r\n                return;\r\n            }\r\n            dispatch(fetchProfileAction(match.params.user));\r\n            if (!postsLoading) {\r\n                console.log(\"HIHI\");\r\n                dispatch(userFetchPostsAction(undefined, match.params.user));\r\n            }\r\n        } else {\r\n            if (\r\n                userInfo &&\r\n                userInfo.id &&\r\n                (!profile || userInfo.id !== profile.id)\r\n            ) {\r\n                dispatch(fetchProfileAction(userInfo.id));\r\n                if (!postsLoading) {\r\n                    console.log(\"HIHI\");\r\n                    dispatch(userFetchPostsAction(undefined, userInfo.id));\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        userInfo,\r\n        match.params.user,\r\n        dispatch,\r\n        profile,\r\n        loading,\r\n        profileError,\r\n        postsLoading,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        //sets isfollowing\r\n        if (\r\n            isFollowing === undefined &&\r\n            profile &&\r\n            profile.isFollowing !== isFollowing\r\n        ) {\r\n            setIsFollowing(profile.isFollowing);\r\n        }\r\n    }, [profile, isFollowing]);\r\n\r\n    useEffect(() => {\r\n        //check if logged in user\r\n        if (match.params.user) {\r\n            if (\r\n                userInfo &&\r\n                (match.params.user === userInfo.id ||\r\n                    match.params.user === userInfo.username)\r\n            ) {\r\n                //is current user\r\n                setIsLoggedInUser(true);\r\n            } else {\r\n                setIsLoggedInUser(false);\r\n            }\r\n        } else {\r\n            //match.params.user not specified so we on logged in users profile.\r\n            setIsLoggedInUser(true);\r\n        }\r\n    }, [userInfo, match.params]);\r\n\r\n    const editProfileHandler = () => {\r\n        if (isLoggedInUser) {\r\n            setShowEditProfile(true);\r\n        }\r\n    };\r\n\r\n    const notificationHandler = () => {\r\n        if (isLoggedInUser) {\r\n            setNotification(true);\r\n        }\r\n    };\r\n\r\n    const closeUpdateProfile = () => {\r\n        setShowEditProfile(false);\r\n        dispatch({ type: USER_PROFILE_UPDATE_RESET });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {profileError &&\r\n                profileError.map((err) => (\r\n                    <Message\r\n                        key={err.message}\r\n                        text={err.message}\r\n                        type=\"danger\"\r\n                    />\r\n                ))}\r\n            <Modal\r\n                opened={showEditProfile}\r\n                onDismiss={closeUpdateProfile}\r\n                content={<EditProfile onSuccess={closeUpdateProfile} />}\r\n            />\r\n            <Modal\r\n                opened={notification}\r\n                onDismiss={() => setNotification(false)}\r\n                content={<Notifications />}\r\n            />\r\n            <div className=\"profile--info\">\r\n                <div className=\"profile--head\">\r\n                    <div className=\"profile--left\">\r\n                        <h2>Followers</h2>\r\n                        <h3>{profile ? profile.followers : \"?\"}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"profile--center\">\r\n                        <Avatar\r\n                            image={\r\n                                profile\r\n                                    ? profile.profileImage\r\n                                    : \"uploads/default.jpg\"\r\n                            }\r\n                            width=\"25%\"\r\n                        />\r\n                        {profile && (\r\n                            <h2 className=\"profile--username\">\r\n                                @{profile.username}\r\n                            </h2>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"profile--right\">\r\n                        <h2>Following</h2>{\" \"}\r\n                        <h3>{profile ? profile.following : \"?\"}</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"profile--description\">\r\n                    {profile ? profile.description : \"\"}\r\n                </div>\r\n\r\n                {!isLoggedInUser ? (\r\n                    <div className=\"profile--actions\">\r\n                        {profile && (\r\n                            <FollowButton\r\n                                following={profile.isFollowing}\r\n                                userId={profile.id}\r\n                            />\r\n                        )}\r\n                        <div\r\n                            onClick={() => alert(\"Chat is not implemented yet\")}\r\n                        >\r\n                            <i className=\"fas fa-comment\"></i>Message\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"profile--actions\">\r\n                        <Link to=\"/logout\">\r\n                            <i className=\"fas fa-user-minus\"></i>\r\n                            Logout\r\n                        </Link>\r\n                        <div onClick={notificationHandler}>\r\n                            <i className=\"fas fa-bell\"></i> Notifications\r\n                        </div>\r\n                        <div onClick={editProfileHandler}>\r\n                            <i className=\"fas fa-user-edit\"></i>Edit Profile\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <section className=\"socialki-center\">\r\n                {userInfo && (\r\n                    <PostContainer\r\n                        fetchAction={userFetchPostsAction}\r\n                        loading={\r\n                            postsLoading === undefined ? true : postsLoading\r\n                        }\r\n                        posts={posts}\r\n                        lastPost={lastPost}\r\n                        user={\r\n                            match.params.user ? match.params.user : userInfo.id\r\n                        }\r\n                        error={error}\r\n                    />\r\n                )}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    fetchPostAction,\r\n    postCommentAction,\r\n    postFetchCommentAction,\r\n} from \"../actions/postActions\";\r\nimport { POST_COMMENT_RESET } from \"../actions/types\";\r\nimport Header from \"../components/Header\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Socialki from \"../components/Socialki\";\r\nimport { history } from \"../history\";\r\n\r\nfunction SocialkiPage({ match }) {\r\n    const dispatch = useDispatch();\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const [uploadError, setUploadError] = useState(undefined);\r\n\r\n    const fetchPost = useSelector((state) => state.fetchPost);\r\n    const { error, post, comments } = fetchPost;\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo, loading: userLoading } = user;\r\n    useEffect(() => {\r\n        if (!userLoading && (userInfo === null || userInfo === {})) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [userInfo, userLoading]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: POST_COMMENT_RESET });\r\n        dispatch(fetchPostAction(match.params.id));\r\n        dispatch(postFetchCommentAction(match.params.id));\r\n    }, [dispatch, match.params.id]);\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        setUploading(true);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                \"/api/v1/upload\",\r\n                formData,\r\n                config\r\n            );\r\n            setImage(data.data);\r\n            setUploading(false);\r\n        } catch (err) {\r\n            setUploadError(err.response.data.errors);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const postCommentHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!post) return;\r\n\r\n        dispatch(postCommentAction(post.id, { description, image }));\r\n        setDescription(\"\");\r\n        setImage(\"\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {uploadError &&\r\n                uploadError.map((err) => (\r\n                    <Message text={err.message} type=\"danger\" />\r\n                ))}\r\n            {error &&\r\n                error.map((err) => (\r\n                    <Message text={err.message} type=\"danger\" />\r\n                ))}\r\n            {post && (\r\n                <div className=\"container\">\r\n                    <Socialki socialki={post} />\r\n                    <div className=\"socialki--comments\">\r\n                        <form\r\n                            onSubmit={postCommentHandler}\r\n                            className=\"socialki--comments-form\"\r\n                        >\r\n                            <div className=\"form-item\">\r\n                                <i className=\"fas fa-comment\"></i>\r\n                                <textarea\r\n                                    onChange={(e) =>\r\n                                        setDescription(e.target.value)\r\n                                    }\r\n                                    value={description}\r\n                                    rows={3}\r\n                                    placeholder=\"Comment\"\r\n                                    type=\"text\"\r\n                                ></textarea>\r\n                            </div>\r\n                            <div className=\"socialki--comments-form--actions\">\r\n                                <div className=\"socialki--comments-form--image\">\r\n                                    <label htmlFor=\"commentImage\">\r\n                                        <i className=\"fas fa-image\"></i>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        id=\"commentImage\"\r\n                                        onChange={handleImageUpload}\r\n                                    />\r\n                                </div>\r\n                                <button type=\"submit\">\r\n                                    Post\r\n                                    {uploading && <Loader size=\"20px\" />}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n\r\n                        {/* TODO: make a comment component or change Socialki to work for comments since its similar*/}\r\n                        {comments && (\r\n                            <div>\r\n                                {comments.map((comment) => (\r\n                                    <Socialki socialki={comment} comment />\r\n                                    // <div key={comment.id}>\r\n                                    //     {comment.description}\r\n                                    // </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialkiPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signout } from \"../actions/userActions\";\r\nimport { history } from \"../history\";\r\nimport Loader from \"./Loader\";\r\nfunction Logout() {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { logoutSuccess } = user;\r\n\r\n    useEffect(() => {\r\n        dispatch(signout());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"test\", logoutSuccess);\r\n        if (logoutSuccess) history.push(\"/login\");\r\n    }, [logoutSuccess]);\r\n\r\n    return (\r\n        <div>\r\n            <Loader />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\n\r\nimport \"../css/AccountCard.css\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport { history } from \"../history\";\r\nfunction AccountCard({ user }) {\r\n    return (\r\n        <div className=\"account-card\">\r\n            <div\r\n                onClick={(e) => history.push(`/profile/${user.username}`)}\r\n                className=\"account-card--left pointer\"\r\n            >\r\n                <Avatar image={user.profileImage} width=\"100%\" />\r\n            </div>\r\n            <div className=\"account-card--center\">\r\n                <h2\r\n                    onClick={(e) => history.push(`/profile/${user.username}`)}\r\n                    className=\"pointer inline\"\r\n                >\r\n                    @{user.username}\r\n                </h2>\r\n                <p>{user.description}</p>\r\n            </div>\r\n            <FollowButton\r\n                className=\"account-card--right\"\r\n                userId={user.id}\r\n                following={user.following}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { searchAction } from \"../actions/postActions\";\r\nimport PostContainer from \"../components/PostContainer\";\r\nimport { SEARCH_RESET } from \"../actions/types\";\r\nimport { history } from \"../history\";\r\nimport AccountCard from \"../components/AccountCard\";\r\n\r\nfunction SearchPage({ match, location }) {\r\n    const dispatch = useDispatch();\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const fetchSearch = useSelector((state) => state.fetchSearch);\r\n    const { loading, error, posts, users, lastPost } = fetchSearch;\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo, loading: userLoading } = user;\r\n\r\n    useEffect(() => {\r\n        if (!userLoading && (userInfo === null || userInfo === {})) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [userInfo, userLoading]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"test\");\r\n        dispatch(\r\n            searchAction(\r\n                match.params.keyword || location.hash,\r\n                undefined,\r\n                true,\r\n                true\r\n            )\r\n        );\r\n        return () => {\r\n            dispatch({ type: SEARCH_RESET });\r\n        };\r\n    }, [dispatch, match.params.keyword, location.hash]);\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/search/${keyword}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {/* className=\"container socialki-center\" */}\r\n            <section className=\"container socialki-center\">\r\n                <form\r\n                    onSubmit={search}\r\n                    style={{\r\n                        width: \"60%\",\r\n                        margin: \"0 auto\",\r\n                    }}\r\n                >\r\n                    <div className=\"form-item\" key=\"keyword\">\r\n                        <i\r\n                            className=\"fas fa-search\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={search}\r\n                        ></i>\r\n\r\n                        <input\r\n                            onChange={(e) => setKeyword(e.target.value)}\r\n                            id=\"keyword\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search...\"\r\n                        ></input>\r\n                    </div>\r\n                </form>\r\n                {users && users.length > 0 && (\r\n                    <div>\r\n                        {users.map((user) => (\r\n                            <AccountCard key={user.id} user={user} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                <PostContainer\r\n                    fetchAction={() =>\r\n                        searchAction(\r\n                            match.params.keyword || location.hash,\r\n                            lastPost,\r\n                            false,\r\n                            posts.length > 0\r\n                        )\r\n                    }\r\n                    loading={loading}\r\n                    error={error}\r\n                    posts={posts}\r\n                    lastPost={lastPost}\r\n                />\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchPage;\r\n","import { useEffect } from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { history } from \"./history\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { getMe } from \"./actions/userActions\";\nimport SignupPage from \"./pages/SignupPage\";\nimport ExplorePage from \"./pages/ExplorePage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport SocialkiPage from \"./pages/SocialkiPage\";\nimport Logout from \"./components/Logout\";\nimport SearchPage from \"./pages/SearchPage\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getMe());\n    }, [dispatch]);\n\n    return (\n        <Router history={history}>\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/signup\" component={SignupPage} />\n            <Route exact path=\"/explore\" component={ExplorePage} />\n            <Route exact path=\"/search/:keyword\" component={SearchPage} />\n            <Route exact path=\"/search\" component={SearchPage} />\n            <Route exact path=\"/profile\" component={ProfilePage} />\n            <Route exact path=\"/profile/:user\" component={ProfilePage} />\n            <Route exact path=\"/post/:id\" component={SocialkiPage} />\n            <Route exact path=\"/\" component={HomePage} />\n        </Router>\n    );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n    fetchExploreReducer,\r\n    fetchFeedReducer,\r\n    postCreateReducer,\r\n    postFetchReducer,\r\n    searchReducer,\r\n    userFetchPostReducer,\r\n} from \"./reducers/postReducers\";\r\nimport { userLoginReducer, fetchProfileReducer } from \"./reducers/userReducers\";\r\nimport { fetchNotificationReducer } from \"./reducers/notificationReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    fetchNotification: fetchNotificationReducer,\r\n    fetchPost: postFetchReducer,\r\n    fetchFeed: fetchFeedReducer,\r\n    fetchExplore: fetchExploreReducer,\r\n    fetchProfile: fetchProfileReducer,\r\n    fetchUserPosts: userFetchPostReducer,\r\n    fetchSearch: searchReducer,\r\n    postCreate: postCreateReducer,\r\n    user: userLoginReducer,\r\n});\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n","import {\r\n    NOTIFICATION_FETCH_FAIL,\r\n    NOTIFICATION_FETCH_REQUEST,\r\n    NOTIFICATION_FETCH_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nexport const fetchNotificationReducer = (\r\n    state = { notifications: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case NOTIFICATION_FETCH_REQUEST:\r\n            return {\r\n                loading: true,\r\n                notifications: state.notifications\r\n                    ? [...state.notifications]\r\n                    : [],\r\n            };\r\n        case NOTIFICATION_FETCH_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                notifications: action.payload.data,\r\n                lastPost: action.payload.lastPost,\r\n            };\r\n        case NOTIFICATION_FETCH_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n                notifications: state.notifications ? [...state.notifications] : [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    FETCH_EXPLORE_FAIL,\r\n    FETCH_EXPLORE_REQUEST,\r\n    FETCH_EXPLORE_RESET,\r\n    FETCH_EXPLORE_SUCCESS,\r\n    FETCH_FEED_FAIL,\r\n    FETCH_FEED_REQUEST,\r\n    FETCH_FEED_RESET,\r\n    FETCH_FEED_SUCCESS,\r\n    POST_COMMENT_LIKE_SUCCESS,\r\n    POST_CREATE_FAIL,\r\n    POST_CREATE_REQUEST,\r\n    POST_CREATE_RESET,\r\n    POST_CREATE_SUCCESS,\r\n    POST_FETCH_COMMENT_FAIL,\r\n    POST_FETCH_COMMENT_REQUEST,\r\n    POST_FETCH_COMMENT_SUCCESS,\r\n    POST_FETCH_FAIL,\r\n    POST_FETCH_REQUEST,\r\n    POST_FETCH_SUCCESS,\r\n    POST_LIKE_SUCCESS,\r\n    USER_FETCH_POSTS_FAIL,\r\n    USER_FETCH_POSTS_REQUEST,\r\n    USER_FETCH_POSTS_RESET,\r\n    USER_FETCH_POSTS_SUCCESS,\r\n    POST_COMMENT_RESET,\r\n    USER_SIGNOUT_SUCCESS,\r\n    SEARCH_REQUEST,\r\n    SEARCH_SUCCESS,\r\n    SEARCH_FAIL,\r\n    SEARCH_RESET,\r\n    FETCH_PROFILE_REQUEST,\r\n} from \"../actions/types\";\r\n\r\nexport const fetchFeedReducer = (state = { posts: [] }, action) => {\r\n    switch (action.type) {\r\n        case FETCH_FEED_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                posts: state.posts ? [...state.posts] : [],\r\n            };\r\n        case FETCH_FEED_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                posts: state.posts\r\n                    ? [...state.posts, ...action.payload.data]\r\n                    : action.payload.data,\r\n                reblogs: state.reblogs\r\n                    ? [...state.reblogs, ...action.payload.reblogs]\r\n                    : action.payload.reblogs,\r\n                lastPost: action.payload.lastPost,\r\n            };\r\n        case POST_LIKE_SUCCESS:\r\n            const posts = [...state.posts];\r\n            posts.forEach((post) => {\r\n                if (action.payload.data.post.id === post.id) {\r\n                    post.liked = true;\r\n                }\r\n            });\r\n            return { ...state, loading: false, posts };\r\n        case FETCH_FEED_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n                posts: state.posts ? [...state.posts] : [],\r\n            };\r\n        case FETCH_FEED_RESET:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n            };\r\n        case USER_SIGNOUT_SUCCESS:\r\n            return { ...state, posts: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const fetchExploreReducer = (state = { posts: [] }, action) => {\r\n    switch (action.type) {\r\n        case FETCH_EXPLORE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                posts: state.posts ? [...state.posts] : [],\r\n            };\r\n        case FETCH_EXPLORE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                posts: state.posts\r\n                    ? [...state.posts, ...action.payload.data]\r\n                    : action.payload.data,\r\n                lastPost: action.payload.lastPost,\r\n            };\r\n        case POST_LIKE_SUCCESS:\r\n            const posts = [...state.posts];\r\n            posts.forEach((post) => {\r\n                if (action.payload.data.post.id === post.id) {\r\n                    post.liked = true;\r\n                }\r\n            });\r\n            return { ...state, loading: false, posts };\r\n        case FETCH_EXPLORE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n                posts: state.posts ? [...state.posts] : [],\r\n            };\r\n        case FETCH_EXPLORE_RESET:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n            };\r\n        case USER_SIGNOUT_SUCCESS:\r\n            return { ...state, posts: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case POST_CREATE_REQUEST:\r\n            return { ...state, loading: true };\r\n        case POST_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                posts: action.payload.data,\r\n                success: true,\r\n            };\r\n        case POST_CREATE_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n        case POST_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userFetchPostReducer = (state = { posts: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_FETCH_POSTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                posts: state.posts ? [...state.posts] : [],\r\n            };\r\n        case USER_FETCH_POSTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                posts: state.posts\r\n                    ? [...state.posts, ...action.payload.data]\r\n                    : action.payload.data,\r\n                lastPost: action.payload.lastPost,\r\n            };\r\n        case POST_LIKE_SUCCESS:\r\n            const posts = [...state.posts];\r\n            posts.forEach((post) => {\r\n                if (action.payload.data.post.id === post.id) {\r\n                    post.liked = true;\r\n                }\r\n            });\r\n            return { ...state, loading: false, posts };\r\n        case USER_FETCH_POSTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n                posts: state.posts ? [...state.posts] : [],\r\n            };\r\n        case USER_FETCH_POSTS_RESET:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n            };\r\n        case USER_SIGNOUT_SUCCESS:\r\n            return { ...state, posts: [] };\r\n        case FETCH_PROFILE_REQUEST:\r\n            return { ...state, posts: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const postFetchReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case POST_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case POST_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                post: action.payload.data,\r\n            };\r\n        case POST_LIKE_SUCCESS:\r\n            const postCopy = { ...state.post };\r\n            if (postCopy.id === action.payload.data.post.id)\r\n                postCopy.liked = action.payload ? true : false;\r\n            return { ...state, loading: false, post: postCopy };\r\n        case POST_FETCH_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case POST_FETCH_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                commentLoading: true,\r\n            };\r\n        case POST_FETCH_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                comments: action.payload.data,\r\n                commentLoading: false,\r\n            };\r\n        case POST_FETCH_COMMENT_FAIL:\r\n            return {\r\n                ...state,\r\n                commentError: action.payload,\r\n                commentLoading: false,\r\n            };\r\n\r\n        case POST_COMMENT_LIKE_SUCCESS:\r\n            state.comments.forEach((c) => {\r\n                if (c.id === action.payload.data.comment.id) {\r\n                    c.liked = !c.liked;\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n            };\r\n        case POST_COMMENT_RESET:\r\n            return { ...state, comments: [] };\r\n        case USER_SIGNOUT_SUCCESS:\r\n            return { ...state, post: undefined };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const searchReducer = (state = { posts: [], users: [] }, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                posts: state.posts ? [...state.posts] : [],\r\n                users: state.users ? [...state.users] : [],\r\n            };\r\n        case SEARCH_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                posts: state.posts\r\n                    ? [...state.posts, ...action.payload.data.posts]\r\n                    : action.payload.data,\r\n                users: state.users\r\n                    ? [...state.users, ...action.payload.data.users]\r\n                    : action.payload.data.users,\r\n                lastPost: action.payload.lastPost,\r\n            };\r\n\r\n        case SEARCH_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n                posts: state.posts ? [...state.posts] : [],\r\n                users: state.users ? [...state.users] : [],\r\n            };\r\n        case SEARCH_RESET:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                posts: [],\r\n                users: [],\r\n            };\r\n        case POST_LIKE_SUCCESS:\r\n            const posts = [...state.posts];\r\n            posts.forEach((post) => {\r\n                if (action.payload.data.post.id === post.id) {\r\n                    post.liked = true;\r\n                }\r\n            });\r\n            return { ...state, loading: false, posts };\r\n        case USER_SIGNOUT_SUCCESS:\r\n            return { ...state, posts: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    FETCH_PROFILE_FAIL,\r\n    FETCH_PROFILE_REQUEST,\r\n    FETCH_PROFILE_SUCCESS,\r\n    USER_FETCH_ME_FAIL,\r\n    USER_FETCH_ME_REQUEST,\r\n    USER_FETCH_ME_SUCCESS,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_RESET,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT_FAIL,\r\n    USER_SIGNOUT_REQUEST,\r\n    USER_SIGNOUT_SUCCESS,\r\n    USER_SIGNUP_FAIL,\r\n    USER_SIGNUP_REQUEST,\r\n    USER_SIGNUP_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nexport const userLoginReducer = (state = { userInfo: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return { loadingLogin: true };\r\n        case USER_SIGNIN_SUCCESS:\r\n            return {\r\n                loadingLogin: false,\r\n                userInfo: action.payload,\r\n                loginSuccess: true,\r\n            };\r\n        case USER_SIGNIN_FAIL:\r\n            return { loadingLogin: false, loginError: action.payload };\r\n\r\n        case USER_SIGNUP_REQUEST:\r\n            return { loadingSignup: true };\r\n        case USER_SIGNUP_SUCCESS:\r\n            return {\r\n                loadingSignup: false,\r\n                userInfo: action.payload,\r\n                signupSuccess: true,\r\n            };\r\n        case USER_SIGNUP_FAIL:\r\n            return { loadingSignup: false, signupError: action.payload };\r\n\r\n        case USER_FETCH_ME_REQUEST:\r\n            return { loading: true };\r\n        case USER_FETCH_ME_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_FETCH_ME_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        case USER_PROFILE_UPDATE_REQUEST:\r\n            return { updateLoading: true };\r\n        case USER_PROFILE_UPDATE_SUCCESS:\r\n            return {\r\n                updateLoading: false,\r\n                userInfo: action.payload,\r\n                updateSuccess: true,\r\n            };\r\n        case USER_PROFILE_UPDATE_FAIL:\r\n            return { updateLoading: false, updateError: action.payload };\r\n        case USER_PROFILE_UPDATE_RESET:\r\n            return {\r\n                ...state,\r\n                updateSuccess: false,\r\n            };\r\n        case USER_SIGNOUT_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGNOUT_SUCCESS:\r\n            return { loading: false, userInfo: undefined, logoutSuccess: true };\r\n        case USER_SIGNOUT_FAIL:\r\n            return { loading: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const fetchProfileReducer = (state = { posts: [] }, action) => {\r\n    switch (action.type) {\r\n        case FETCH_PROFILE_REQUEST:\r\n            return { loading: true, posts: [] };\r\n        case FETCH_PROFILE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                profile: action.payload.data,\r\n            };\r\n        case FETCH_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}